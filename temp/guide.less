@import (reference) '../style/wee.variables.less';                                      // Core configuration
@import (reference) '@{sourcePath}custom/variables.less';                               // Custom configuration
@import (reference) '../style/wee.mixins.less';                                         // Mixins
@import (reference) '../style/wee.reset.less';                                          // Baseline
@import (optional, reference) '@{modulePath}@{moduleName}/module/style/variables.less'; // Module configuration
@import (optional) '@{modulePath}@{moduleName}/module/style/screen.less';               // Module baseline

// Inject imports
@import "src/modules/guide/module/style/screen.less";


// Responsive
.wee-mobile-landscape () when not (@mobileLandscapeWidth = false) {
	@import (optional) "src/modules/guide/module/style/breakpoints/mobile-landscape.less";
}
.wee-tablet-portrait () when not (@tabletPortraitWidth = false) {
	@import (optional) "src/modules/guide/module/style/breakpoints/tablet-portrait.less";
}
.wee-desktop-small () when not (@desktopSmallWidth = false) {
	@import (optional) "src/modules/guide/module/style/breakpoints/desktop-small.less";
}
.wee-desktop-medium () when not (@desktopMediumWidth = false) {
	@import (optional) "src/modules/guide/module/style/breakpoints/desktop-medium.less";
}
.wee-desktop-large () when not (@desktopLargeWidth = false) {
	@import (optional) "src/modules/guide/module/style/breakpoints/desktop-large.less";
}


.wee-responsive () when (@responsive = true) and (@responsiveEnabled = true) and not (@legacyMode = true) {
	.check () when not (@mobileLandscapeWidth = false) {
		@media (min-width: (@mobileLandscapeWidth - @responsiveOffset)) {
			.wee-mobile-landscape();
		}
	}
	.check () when not (@tabletPortraitWidth = false) {
		@media (min-width: (@tabletPortraitWidth - @responsiveOffset)) {
			.wee-tablet-portrait();
		}
	}
	.check () when not (@desktopSmallWidth = false) {
		@media (min-width: (@desktopSmallWidth - @responsiveOffset)) {
			.wee-desktop-small();
		}
	}
	.check () when not (@desktopMediumWidth = false) {
		@media (min-width: (@desktopMediumWidth - @responsiveOffset)) {
			.wee-desktop-medium();
		}
	}
	.check () when not (@desktopLargeWidth = false) {
		@media (min-width: (@desktopLargeWidth - @responsiveOffset)) {
			.wee-desktop-large();
		}
	}
	.check();
}

.wee-responsive();

// Framework
@legacyMode: false;